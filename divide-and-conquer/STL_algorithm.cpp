#include <iostream>
#include <algorithm>

int main() {

    // std::binary_search(); // 이진 검색으로 원소 하나 검색
    // std::search();   // 원소 검색
    // std::upper_bound();  // 주어진 값보다 큰 원소가 나타나는 위치의 반복자 반환
    // std::lower_bound();  // 주어진 값보다 작은 원소가 나타나는 위치의 반복자 반환
    // std::partition();    // 분할 연산 수행 후, 주어진 피벗보다 작은 원소는 왼쪽으로, 큰 원소는 오른쪽으로 이동
    // std::partition_copy();   // 분할 연산 수행 후, 결과를 두 개의 배열로 반환
    // std::is_partitioned();   // 주어진 피벗을 기준으로 분할이 되어 있는지 검사
    // std::stable_partition(); // 분할 연산 수행 후, 각 원소는 원본 순서를 유지
    // std::sort();     // 정렬 함수
    // std::stable_sort();  // 정렬 후, 순위가 같은 원소 대해 원본 순서가 변경되지 않도록 함
    // std::partial_sort(); // 부분 정렬
    // std::merge();    // 두 개의 컨테이너를 병합, 원소 순서는 그대로 유지
    // std::nth_element();  // n번째로 작은 원소 반환
    // std::accumulate();   // 원소의 누적 합을 계산
    // std::transform();    // 컨테이너의 모든 원소에 대해 해당 함수를 적용
    // std::reduce();   // 지정한 범위의 원소에 대해 리듀스 연산을 수행하고 결과를 반환

    return 0;
}